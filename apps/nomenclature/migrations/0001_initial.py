# Generated by Django 3.1.7 on 2021-06-04 14:20

from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('partners', '0001_initial'),
        ('translations', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True, verbose_name='Идентификатор')),
                ('is_active', models.BooleanField(default=False)),
                ('brand', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='partners.brand', verbose_name='Бренд')),
                ('name', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='translations.multilanguagechar', verbose_name='Название')),
            ],
            options={
                'verbose_name': 'Категория',
                'verbose_name_plural': 'Категории',
            },
        ),
        migrations.CreateModel(
            name='Position',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('iiko_name', models.CharField(blank=True, max_length=256, null=True, verbose_name='Название в системе IIKO')),
                ('iiko_description', models.TextField(blank=True, null=True, verbose_name='Описание в системе IIKO')),
                ('outer_id', models.UUIDField(null=True, verbose_name='UUID в системе IIKO')),
                ('is_additional', models.BooleanField(default=False, verbose_name='Дополнительная позиция')),
                ('category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='positions', to='nomenclature.category', verbose_name='Категория')),
                ('iiko_brand', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='positions', to='partners.localbrand')),
            ],
            options={
                'verbose_name': 'Позиция(Блюдо)',
                'verbose_name_plural': 'Позиции(Блюда)',
            },
        ),
        migrations.CreateModel(
            name='LocalCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True, verbose_name='Идентификатор')),
                ('is_active', models.BooleanField(default=True)),
                ('local_brand', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='partners.localbrand', verbose_name='Локальный бренд')),
                ('name', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='translations.multilanguagechar', verbose_name='Название')),
            ],
            options={
                'verbose_name': 'Локальная категория',
                'verbose_name_plural': 'Локальные категории',
            },
        ),
        migrations.CreateModel(
            name='BranchCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_active', models.BooleanField(default=True)),
                ('branch', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='partners.branch', verbose_name='Филиал')),
                ('name', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='translations.multilanguagechar', verbose_name='Название')),
            ],
            options={
                'verbose_name': 'Категория филиала',
                'verbose_name_plural': 'Категории филиалов',
            },
        ),
        migrations.CreateModel(
            name='PositionInfoByOrganization',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True, verbose_name='Идентификатор')),
                ('price', models.DecimalField(decimal_places=2, max_digits=12, verbose_name='Цена')),
                ('branch', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='positions', to='partners.branch')),
                ('position', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='positions_by_org', to='nomenclature.position')),
            ],
            options={
                'unique_together': {('position', 'branch')},
            },
        ),
    ]
