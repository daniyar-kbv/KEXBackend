version: '3'

volumes:
  postgres:
  portainer_data:

services:
  rest_server:
    build:
      context: .
      dockerfile: Dockerfile
    volumes:
      - .:/app
    environment:
      - USE_DEFAULT_OTP=True
      - DJANGO_SETTINGS_MODULE=config.settings.development
      - RABBIT_HOST=rabbitmq
      - DB_HOST=postgres
      - REDIS_HOST=redis
    ports:
      - "8000:8000"
    depends_on:
      - redis
      - postgres
      - celery-worker
      - celery-beat

  celery-beat:
    build:
      context: .
      dockerfile: Dockerfile
    volumes:
      - .:/app
    environment:
      - DJANGO_SETTINGS_MODULE=config.settings.development
      - RABBIT_HOST=rabbitmq
      - DB_HOST=postgres
      - REDIS_HOST=redis
      - CONTAINER_TYPE=BEAT
    depends_on:
      - rabbitmq
      - celery-worker

  celery-worker:
    build:
      context: .
      dockerfile: Dockerfile
    volumes:
      - .:/app
    environment:
      - USE_DEFAULT_OTP=True
      - DJANGO_SETTINGS_MODULE=config.settings.development
      - RABBIT_HOST=rabbitmq
      - DB_HOST=postgres
      - REDIS_HOST=redis
      - CONTAINER_TYPE=CELERY
    depends_on:
      - rabbitmq

  postgres:
    image: postgres
    volumes:
      - postgres:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=kexdb
      - POSTGRES_PASSWORD=kexdb
    ports:
      - "5432:5432"
    depends_on:
      - redis

  rabbitmq:
    image: rabbitmq
    depends_on:
      - redis
  redis:
    image: redis

  portainer:
    image: portainer/portainer:alpine
    command: -H tcp://localhost:9001 --tlsskipverify
    ports:
      - "9001:9001"
    volumes:
      - portainer_data:/data
    depends_on:
      - rest_server
